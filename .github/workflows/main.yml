name: CI/CD

on:
  pull_request:
    branches:
      - Dev
      - Test
      - Prod
  push:
    branches:
      - Test

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      # Define a saída 'upload_url' para ser utilizada por outros jobs
      id: build
      set: ${{ steps.upload.outputs }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Adicione mais etapas conforme necessário para construir seu aplicativo

      - name: Upload Release Artifact Info
        id: upload
        run: echo "upload_url=${{ github.event.repository.releases[0].upload_url }}" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Adicione etapas de teste conforme necessário

  approve-dev:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  approve-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


  build-artifact:
    runs-on: ubuntu-latest

    needs: 
      - approve-dev
      - approve-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build artifact
        run: pyinstaller --onefile task_manager_gui.py

      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: ./dist/task_manager_gui
          asset_name: task_manager_gui
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
