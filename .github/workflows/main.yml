name: CI/CD

on:
  pull_request:
    branches:
      - Dev
      - Test
      - Prod
  push:
    branches:
      - Test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run unit tests
        run: python -m unittest discover

  approve-dev:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Add 'approved' label
        run: |
          echo "label: approved" >> $GITHUB_EVENT_PATH

  approve-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Add 'approved' label
        run: |
          echo "label: approved" >> $GITHUB_EVENT_PATH

  build-artifact:
    runs-on: ubuntu-latest

    needs: 
      - approve-dev
      - approve-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build artifact
        run: pyinstaller --onefile task_manager_gui.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/task_manager_gui
          asset_name: task_manager_gui
          asset_content_type: application/octet-stream
