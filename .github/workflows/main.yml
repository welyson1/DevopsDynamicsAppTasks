name: CI/CD

on:
  pull_request:
    branches:
      - Dev
  push:
    branches:
      - Test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run unit tests
        run: python -m unittest discover

  approve:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Add 'approved' label
        run: |
          echo "label: approved" >> $GITHUB_EVENT_PATH
  
  deploy:
    runs-on: ubuntu-latest
  
    needs: approve
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
  
      - name: Configure Git Identity
        run: |
          git config --local user.email "monitoriawel@hotmail.com"
          git config --local user.name "welyson1"
  
      - name: Debug Git Status Before Merge
        run: |
          git status
          git branch
  
      - name: Copy code to Prod branch
        run: |
          git fetch origin
          git checkout Prod && git merge --no-ff --allow-unrelated-histories Test
  
      - name: Debug Git Status After Merge
        run: |
          git status
          git branch


  build-artifact:
    runs-on: ubuntu-latest

    needs: deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build artifact
        run: pyinstaller --onefile task_manager_gui.py
