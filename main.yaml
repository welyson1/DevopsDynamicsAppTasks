name: Automated Pipeline

on:
  pull_request:
    branches:
      - Dev

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Wait for Approval Comment
        id: wait-for-approval
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            
            async function checkForApproval() {
              const { data: comments } = await github.issues.listComments({
                owner,
                repo,
                issue_number,
              });

              const approvalComment = comments.find(comment => comment.body.includes('@revisor-aprova'));

              if (approvalComment) {
                console.log('Approval comment found!');
                return 'approved';
              } else {
                console.log('Waiting for approval comment...');
                return 'pending';
              }
            }

            return checkForApproval();
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Documentation
        if: steps.wait-for-approval.outputs.result == 'approved'
        run: |
          # Lógica para gerar a documentação usando pdoc3
          # Exemplo: pip install pdoc3 && pdoc --output-dir docs --force your_module

      # Restante do seu fluxo de trabalho
